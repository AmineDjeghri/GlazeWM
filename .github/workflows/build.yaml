name: Build

on:
  workflow_call:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # 64-bit Windows (Intel & AMD)
          - rust-target: x86_64-pc-windows-msvc

          # 64-bit Windows (ARM)
          - rust-target: aarch64-pc-windows-msvc

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248
        with:
          toolchain: nightly
          targets: ${{ matrix.rust-target }}

      - uses: swatinem/rust-cache@988c164c3d0e93c4dbab36aaf5bbeb77425b2894
        with:
          shared-key: ${{ matrix.rust-target }}-${{ hashFiles('Cargo.lock') }}

      - name: Build (windows subsystem)
        run: |
          cargo build --locked --release --target ${{ matrix.rust-target }} --features no_console
          mkdir tmp/noconsole
          mv target/${{ matrix.rust-target }}/release/{wm,watcher}.exe tmp/noconsole

      - name: Build (console subsystem)
        run: |
          cargo build --locked --release --target ${{ matrix.rust-target }}
          mkdir tmp/console
          mv target/${{ matrix.rust-target }}/release/{wm,watcher}.exe tmp/console

      - uses: actions/upload-artifact@v4
        with:
          name: executables-${{ matrix.rust-target }}
          if-no-files-found: error
          path: tmp/**
