name: Build

on:
  workflow_call:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          # 64-bit Windows (Intel & AMD)
          - rust-target: x86_64-pc-windows-msvc
            wix-target: win-x64

          # 64-bit Windows (ARM)
          - rust-target: aarch64-pc-windows-msvc
            wix-target: win-arm64

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248
        with:
          toolchain: nightly
          targets: ${{ matrix.rust-target }}

      - uses: swatinem/rust-cache@988c164c3d0e93c4dbab36aaf5bbeb77425b2894
        with:
          shared-key: ${{ matrix.rust-target }}-${{ hashFiles('Cargo.lock') }}

      - name: Build with windows subsystem
        run: |
          cargo build --locked --release --target ${{ matrix.rust-target }} --features windows_subsystem
          mv target/${{ matrix.rust-target }}/release/wm.exe tmp/wm-noconsole.exe

      - name: Build with console subsystem
        run: |
          cargo build --locked --release --target ${{ matrix.rust-target }}
          mv target/${{ matrix.rust-target }}/release/wm.exe tmp/wm-console.exe

      - name: Install WiX
        run: dotnet tool install --global wix --version 5.0.0

      - name: Create MSI installer
        run: |
          wix extension add WixToolset.UI.wixext/5 WixToolset.Util.wixext/5
          wix build -arch ${{ matrix.wix-target }} -ext WixToolset.UI.wixext -ext WixToolset.Util.wixext \
            -out "./installer.msi" "./resources/main.wxs"

      - uses: actions/upload-artifact@v4
        with:
          name: bundle-${{ matrix.rust-target }}
          if-no-files-found: error
          path: tmp
